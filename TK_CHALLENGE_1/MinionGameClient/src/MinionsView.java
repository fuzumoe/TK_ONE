
import java.awt.Cursor;
import java.awt.Image;
import java.awt.Point;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintStream;
import java.rmi.RemoteException;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;

import javax.swing.JLabel;
import javax.swing.JTextArea;

/**
 *
 * @authors Group C
 */
public class MinionsView extends javax.swing.JFrame {

    private MinionsController mainCtrl;
    public Toolkit toolkit;
    private PrintStream printStream;
    public BufferedReader reader;

    public MinionsView(MinionsController mainCtrl) throws RemoteException {
       
        initComponents();
        this.reader = new BufferedReader(new InputStreamReader(System.in));
       this.printStream = new PrintStream(new CustomOutputStream(jTextArea1));
       System.setOut(printStream);
       System.setErr(printStream);
        this.jPanel1.setCursor(Toolkit.getDefaultToolkit()
                .createCustomCursor(
                        new ImageIcon(getClass().getResource("/banana.png")).getImage(),
                        new Point(0, 0), "CUSTOM"));
        this.jScrollPane1.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        this.jTextArea1.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        this.mainCtrl = mainCtrl;
    }

    /**
     * Creates new form MinionsView
     */
    public MinionsView() throws RemoteException {

        initComponents();
        this.setCursor(Toolkit.getDefaultToolkit()
                .createCustomCursor(
                        new ImageIcon(getClass().getResource("/banana.png")).getImage(),
                        new Point(0, 0), "CUSTOM"));

    }

    public JLabel getMinionLabel() {
        return this.lMinion;
    }

    /**
     * set minions position on the screen with coordinates from RMI service
     *
     * @param coordinates
     */
    public void setMinionsPosition(Coordinates coordinates) {
//        this.mainView.getMinionLabel().setLocation(coordinates.getX(), coordinates.getY());
        this.lMinion.setLocation(coordinates.getX(), coordinates.getY());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lMinion = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 51));
        setCursor(Toolkit.getDefaultToolkit()
            .createCustomCursor(
                new ImageIcon(getClass().getResource("/banana.png")).getImage(),
                new Point(0,0),"CUSTOM"));

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.setLayout(null);

        lMinion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minion.png"))); // NOI18N
        lMinion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lMinionMouseClicked(evt);
            }
        });
        jPanel1.add(lMinion);
        lMinion.setBounds(238, 95, 150, 131);

        jTextArea1.setBackground(new java.awt.Color(0, 0, 0));
        jTextArea1.setColumns(20);
        jTextArea1.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea1.setRows(5);
        jTextArea1.setText(" ");
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 725, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
        );

        setSize(new java.awt.Dimension(935, 451));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lMinionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lMinionMouseClicked
        this.mainCtrl.feedMinion();
    }//GEN-LAST:event_lMinionMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws RemoteException {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MinionsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MinionsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MinionsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MinionsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MinionsView().setVisible(true);
                } catch (RemoteException ex) {
                    Logger.getLogger(MinionsView.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel lMinion;
    // End of variables declaration//GEN-END:variables

class CustomOutputStream extends OutputStream{
    
    private JTextArea textArea;
    
    public CustomOutputStream(JTextArea textArea){
        this.textArea = textArea;
    }

    @Override
    public void write(int i) throws IOException {
        textArea.append(String.valueOf((char) i));
        textArea.setCaretPosition(jTextArea1.getDocument().getLength());
     }
    
}

}
